#!/usr/bin/env bash
# Configure your Nginx server to have a custom 404 page that contains the string Ceci n'est pas une page.

NGINX_CONFIG_FILE="/etc/nginx/sites-available/default"
WWW_DIR="/var/www"

# Define the server block as a variable
SERVER_BLOCK=$(
    cat <<EOF
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    root /var/www/html;
    index index.html index.html index.htm index.nginx-debian.html;

    error_page 404 /404.html;
    server_name _;


    location /404 {
        internal;
    }    

    location / {
        try_files \$uri \$uri/ =404;
    }
}
EOF
)
REDIRECT_LOCATION="/404"
# Install nginx if it's not already installed
if ! command -v nginx &>/dev/null; then
    apt-get update
    apt-get install -y nginx
fi

# Create the web root directory and set its permissions
mkdir -p "$WWW_DIR/html"
chmod -R 755 "$WWW_DIR"

# Create the custom 404 error page
echo "Ceci n'est pas une page" >"$WWW_DIR/html/404.html"

if [ -f "$NGINX_CONFIG_FILE" ]; then
    if [ ! -e "$NGINX_CONFIG_FILE.bck" ]; then
        # Make backup
        cp "$NGINX_CONFIG_FILE" "$NGINX_CONFIG_FILE.bck"
    fi
fi

if grep -q "$REDIRECT_LOCATION" "$NGINX_CONFIG_FILE"; then
    echo "Redirect location already exists in nginx config file."
else
    sed -i "/^\s*server_name\s*_;/a\\\n    error_page 404 /404.html;\n\n    location $REDIRECT_LOCATION {\n        internal;\n    }" "$NGINX_CONFIG_FILE"
fi
# Test the new nginx configuration and reload nginx if there are no errors
nginx -t && systemctl reload nginx
